{"version":3,"sources":["actions/auth-action.js","containers/login-container.js","components/auth/login.js"],"names":["onError","err","type","payload","isLoading","registered","isAuthenticated","isError","onSignup","email","password","data","console","log","dispatch","axios","post","then","res","catch","onLogin","setToken","token","setExpiry","expiresAt","setUserId","user_id","expireToken","mapActionsToprops","connect","state","userData","props","history","useHistory","useState","setEmail","setPassword","emailError","setEmailError","passwordError","setPasswordError","validate","length","Card","body","outline","color","Spinner","className","style","width","height","addSpinner","localStorage","setItem","push","Form","onSubmit","e","preventDefault","FormGroup","row","Label","for","sm","Col","Input","name","value","id","placeholder","onChange","event","target","FormText","Button"],"mappings":"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","file":"static/js/3.37b2e534.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {setToken, setExpiry,expireToken,setUserId} from '../service/token-service'\r\n\r\nfunction beforeRequest() {\r\n    return {\r\n        type: 'BEFORE_AUTH',\r\n        payload: {\r\n            isLoading: true,\r\n            registered:false,\r\n            isError:'',\r\n            isAuthenticated:false\r\n        }\r\n    }\r\n}\r\nfunction afterSignupRequest() {\r\n    return {\r\n        type: 'AFTER_SIGNUP',\r\n        payload: {\r\n            isLoading: false,\r\n            registered:true,\r\n            isAuthenticated:false,\r\n            isError:''\r\n          }\r\n    }\r\n}\r\nfunction afterLoginRequest(res){\r\n    return{\r\n        type:'AFTER_LOGIN',\r\n        payload:{\r\n            isLoading:false,\r\n            isAuthenticated:true,\r\n            registered:false,\r\n            isError:''\r\n        }\r\n    }\r\n}\r\nfunction onError(err) {\r\n    return {\r\n        type: 'ERROR',\r\n        payload: {\r\n            isLoading: false,\r\n            registered:false,\r\n            isAuthenticated:false,\r\n            isError: err\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function onSignup(email, password) {\r\n    const data = { email, password };\r\n    console.log(email);\r\n    return dispatch => {\r\n        dispatch(beforeRequest());\r\n\r\n        axios.post(`/api/users/signup`,data).\r\n            then(res => {\r\n                console.log(res);\r\n                dispatch(afterSignupRequest())\r\n            }).\r\n            catch(err => {\r\n                console.log(err);\r\n                dispatch(onError(err))\r\n            })\r\n           \r\n    }\r\n}\r\n\r\nexport function onLogin(email, password) {\r\n    const data = { email, password };\r\n    console.log(email);\r\n    return dispatch => {\r\n        dispatch(beforeRequest());\r\n        axios.post(`/api/users/signin`,data).\r\n            then(res => {\r\n                setToken(res.data.token);\r\n                setExpiry(res.data.expiresAt);\r\n                setUserId(res.data.user_id)\r\n                expireToken()\r\n                dispatch(afterLoginRequest(res))\r\n            }).\r\n            catch(err => {\r\n                console.log(err);\r\n                dispatch(onError(err))\r\n            })\r\n           \r\n    }\r\n}","import Login from '../components/auth/login'\r\nimport { onLogin } from '../actions/auth-action'\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n\r\n    userData: state.userData\r\n    \r\n  }\r\n};\r\n\r\nconst mapActionsToprops = {\r\n  onLogin: onLogin\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToprops)(Login);","import React, {  useState } from 'react'\r\nimport { Col, Card, Button, FormText, FormGroup, Label, Spinner, Form, Input } from 'reactstrap';\r\nimport './signup.css'\r\nimport { useHistory } from 'react-router-dom';\r\n// import {withRouter} from 'react-router-dom'\r\n\r\n\r\n  export default function Login(props) {\r\n   const history=useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate()\r\n        if (!isValid) {\r\n            return\r\n        }\r\n        props.onLogin(email, password);\r\n        setEmail('');\r\n        setPassword('');\r\n    }\r\n\r\n    const handleEmailChange = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n    const handlePassswordChange = (event) => {\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const validate = () => {\r\n        if (!email) {\r\n            setEmailError(\"Email is Required\")\r\n\r\n        }\r\n        if (password.length < 6) {\r\n            setPasswordError(\"Password should be of length six characters atleast\")\r\n\r\n        }\r\n        if (emailError || passwordError) {\r\n\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n  const redirect=()=>{\r\n    if(props.userData.isAuthenticated){\r\n        localStorage.setItem('user',email)\r\n        history.push('/');\r\n\r\n    }\r\n  }\r\n      \r\n   \r\n   const addSpinner = () => {\r\n        if (props.isLoading) {\r\n            return <Spinner className=\"loader\" style={{ width: '8rem', height: '8rem' }} type=\"grow\" />\r\n        }\r\n    }\r\n\r\n    // render() {\r\n\r\n    return (\r\n\r\n\r\n        <Card body outline color=\"primary\" >\r\n            {addSpinner()}\r\n            {redirect()}\r\n            <h5><strong>Login to Blog App</strong></h5>\r\n\r\n            <Form onSubmit={handleSubmit}>\r\n                <FormGroup row>\r\n                    <Label for=\"Email\" sm={2}>Email</Label>\r\n                    <Col sm={7}>\r\n                        <Input type=\"email\" name=\"email\"  value={email} id=\"Email\" placeholder=\"Enter Email\" onChange={handleEmailChange} />\r\n                        <FormText>{emailError}</FormText>\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"password\" sm={2}>Password</Label>\r\n                    <Col sm={7}>\r\n                        <Input type=\"password\" name=\"password\" value={password} id=\"password\" placeholder=\"Enter Password\" onChange={handlePassswordChange} />\r\n                        <FormText>{passwordError}</FormText>\r\n                    </Col>\r\n                </FormGroup>\r\n\r\n                <Button className=\"login\" color=\"secondary\" type=\"submit\">Login</Button>\r\n            </Form>\r\n\r\n        </Card>\r\n\r\n\r\n    )\r\n}\r\n\r\n"],"sourceRoot":""}