{"version":3,"sources":["actions/auth-action.js","containers/signup-container.js","components/auth/signup.js"],"names":["onError","err","type","payload","isLoading","registered","isAuthenticated","isError","onSignup","email","password","data","console","log","dispatch","axios","post","then","res","catch","onLogin","setToken","token","setExpiry","expiresAt","setUserId","user_id","expireToken","mapActionsToprops","connect","state","userData","props","history","useHistory","useState","setEmail","setPasword","confirm_password","setConfirm_password","emailError","setEmailError","passwordError","setPasswordError","confirm_password_Error","setConfirmPasswordError","validate","length","Card","body","outline","color","Spinner","className","style","width","height","addSpinner","push","Form","onSubmit","e","preventDefault","FormGroup","row","Label","for","sm","Col","Input","name","id","placeholder","onChange","event","target","value","FormText","Button"],"mappings":"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","file":"static/js/4.5c9d39e2.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {setToken, setExpiry,expireToken,setUserId} from '../service/token-service'\r\n\r\nfunction beforeRequest() {\r\n    return {\r\n        type: 'BEFORE_AUTH',\r\n        payload: {\r\n            isLoading: true,\r\n            registered:false,\r\n            isError:'',\r\n            isAuthenticated:false\r\n        }\r\n    }\r\n}\r\nfunction afterSignupRequest() {\r\n    return {\r\n        type: 'AFTER_SIGNUP',\r\n        payload: {\r\n            isLoading: false,\r\n            registered:true,\r\n            isAuthenticated:false,\r\n            isError:''\r\n          }\r\n    }\r\n}\r\nfunction afterLoginRequest(res){\r\n    return{\r\n        type:'AFTER_LOGIN',\r\n        payload:{\r\n            isLoading:false,\r\n            isAuthenticated:true,\r\n            registered:false,\r\n            isError:''\r\n        }\r\n    }\r\n}\r\nfunction onError(err) {\r\n    return {\r\n        type: 'ERROR',\r\n        payload: {\r\n            isLoading: false,\r\n            registered:false,\r\n            isAuthenticated:false,\r\n            isError: err\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function onSignup(email, password) {\r\n    const data = { email, password };\r\n    console.log(email);\r\n    return dispatch => {\r\n        dispatch(beforeRequest());\r\n\r\n        axios.post(`/api/users/signup`,data).\r\n            then(res => {\r\n                console.log(res);\r\n                dispatch(afterSignupRequest())\r\n            }).\r\n            catch(err => {\r\n                console.log(err);\r\n                dispatch(onError(err))\r\n            })\r\n           \r\n    }\r\n}\r\n\r\nexport function onLogin(email, password) {\r\n    const data = { email, password };\r\n    console.log(email);\r\n    return dispatch => {\r\n        dispatch(beforeRequest());\r\n        axios.post(`/api/users/signin`,data).\r\n            then(res => {\r\n                setToken(res.data.token);\r\n                setExpiry(res.data.expiresAt);\r\n                setUserId(res.data.user_id)\r\n                expireToken()\r\n                dispatch(afterLoginRequest(res))\r\n            }).\r\n            catch(err => {\r\n                console.log(err);\r\n                dispatch(onError(err))\r\n            })\r\n           \r\n    }\r\n}","import React from 'react'\r\nimport Signup from '../components/auth/signup'\r\nimport { onSignup } from '../actions/auth-action'\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoading: state.userData.isLoading,\r\n    registered:state.userData.registered\r\n  }\r\n};\r\n\r\nconst mapActionsToprops = {\r\n  onSignup: onSignup\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToprops)(Signup);","import React, { useState } from 'react'\r\nimport { Col, Card, Button, FormText, FormGroup, Label, Spinner, Form, Input } from 'reactstrap';\r\nimport './signup.css'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nexport default function Signup(props) {\r\n    const history=useHistory()\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPasword] = useState('');\r\n    const [confirm_password, setConfirm_password] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n    const [confirm_password_Error, setConfirmPasswordError] = useState('');\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate()\r\n        if (!isValid) {\r\n            return\r\n        }\r\n      props.onSignup(email, password);\r\n      setEmail('');\r\n        setPasword('');\r\n      console.log(props.registered)\r\n     \r\n    }\r\n\r\n    const handleEmailChange = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const handlePasswordChange = (event) => {\r\n        setPasword(event.target.value)\r\n    }\r\n    const handleConfirmPasswordChange = event => {\r\n        setConfirm_password(event.target.value)\r\n    }\r\n\r\n    const validate = () => {\r\n        let emailError = '';\r\n        let passwordError = '';\r\n        let confirm_password_Error = '';\r\n        if (!email) {\r\n            setEmailError(\"Email is Required\")\r\n\r\n        }\r\n\r\n        if (password.length < 6) {\r\n            setPasswordError(\"Password should be of length six characters atleast\")\r\n\r\n        }\r\n        if (password !== confirm_password) {\r\n            setConfirmPasswordError('Password do not match please enter correct password!!')\r\n        }\r\n\r\n        if (emailError || passwordError || confirm_password_Error) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    const redirect=()=>{\r\n        if(props.registered){\r\n            history.push(\"/login\");\r\n        }\r\n    }\r\n    const addSpinner = () => {\r\n        if (props.isLoading) {\r\n            return <Spinner className=\"loader\" style={{ width: '8rem', height: '8rem' }} type=\"grow\" />\r\n        }\r\n    }\r\n    return (\r\n\r\n        <Card body outline color=\"danger\">\r\n            {addSpinner()}\r\n            {redirect()}\r\n            <Form onSubmit={handleSubmit}>\r\n                <FormGroup row>\r\n                    <Label for=\"Email\" sm={2}>Email</Label>\r\n                    <Col sm={7}>\r\n                        <Input type=\"email\" name=\"email\" id=\"Email\" placeholder=\"Enter Email\" onChange={handleEmailChange} />\r\n                        <FormText>{emailError}</FormText>\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"password\" sm={2}>Password</Label>\r\n                    <Col sm={7}>\r\n                        <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter Password\" onChange={handlePasswordChange} />\r\n                        <FormText>{passwordError}</FormText>\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"confirm_password\" sm={2}>Confirm Password</Label>\r\n                    <Col sm={7}>\r\n                        <Input type=\"password\" name=\"confirm_password\" id=\"confirm_password\" placeholder=\"Enter same Password again\" onChange={handleConfirmPasswordChange} />\r\n                        <FormText>{confirm_password_Error}</FormText>\r\n                    </Col>\r\n                </FormGroup>\r\n                <Button className=\"signup\" color=\"secondary\" type=\"submit\">Signup</Button>\r\n            </Form>\r\n           \r\n        </Card>\r\n\r\n\r\n    )\r\n}\r\n\r\n"],"sourceRoot":""}